FROM nvcr.io/nvidia/ai-workbench/python-basic:1.0.6

# Install dependencies
RUN apt-get update && apt-get install -y \
    wget \
    bzip2 \
    ca-certificates \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    && rm -rf /var/lib/apt/lists/*

# Install Miniconda with Python 3.10
ENV CONDA_DIR /opt/conda
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-py310_25.3.1-1-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p ${CONDA_DIR} && \
    rm ~/miniconda.sh

# Add conda to PATH but keep system Python as default
ENV PATH="${CONDA_DIR}/bin:${PATH}"

#clone the repo
RUN git clone https://github.com/nvidia-cosmos/cosmos-predict1.git


# Verify Python version
RUN python --version

# Create the cosmos-predict1 conda environment.
RUN ${CONDA_DIR}/bin/conda env create --file ./cosmos-predict1/cosmos-predict1.yaml

# Run commands in the cosmos-predict1 environment
SHELL ["conda", "run", "-n", "cosmos-predict1", "/bin/bash", "-c"]

WORKDIR /cosmos-predict1
# Install the dependencies.
RUN pip install -r requirements.txt

# Patch Transformer engine linking issues in conda environments.
RUN ln -sf $CONDA_PREFIX/lib/python3.10/site-packages/nvidia/*/include/* $CONDA_PREFIX/include/ && \
    ln -sf $CONDA_PREFIX/lib/python3.10/site-packages/nvidia/*/include/* $CONDA_PREFIX/include/python3.10

# Install Transformer engine.
RUN pip install transformer-engine[pytorch]==1.12.0

# Install Apex for full training with bfloat16.
RUN git clone https://github.com/NVIDIA/apex && \
    cd apex && \
    CUDA_HOME=$CONDA_PREFIX pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --config-settings "--build-option=--cpp_ext" --config-settings "--build-option=--cuda_ext" .

# Set the default conda environment
RUN echo "source ${CONDA_DIR}/bin/activate cosmos-predict1" >> ~/.bashrc

CMD ["/bin/bash"]